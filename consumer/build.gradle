import org.gradle.api.tasks.Copy

plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'au.com.dius.pact' version '4.1.7'
}

group = 'com.ck.lab.contract'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-okhttp:10.12'
    implementation 'io.github.openfeign:feign-jackson:10.12'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'au.com.dius.pact.consumer:junit5:4.2.13'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

task copyPacts(type: Copy) {
    description 'Copies the generated Pact json file to the provider resources directory'

    from('build/pacts/')
    into('../producer/src/test/resources/pacts/')
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

pact {
    publish {
        pactDirectory = 'build/pacts'
        pactBrokerUrl = 'http://localhost:9292/'
        pactBrokerUsername = 'pact_workshop'
        pactBrokerPassword = 'pact_workshop'
        tags = [getGitBranch(), 'test', 'prod']
        consumerVersion = getGitHash()
    }
}
